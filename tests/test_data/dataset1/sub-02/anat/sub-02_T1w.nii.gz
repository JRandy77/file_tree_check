similar random text compared to sub-01

stat.ST_DEV

    Device inode resides on.

stat.ST_NLINK

    Number of links to the inode.

stat.ST_UID

    User id of the owner.

stat.ST_GID

    Group id of the owner.

stat.ST_SIZE

    Size in bytes of a plain file; amount of data waiting on some special files.

stat.ST_ATIME

    Time of last access.

stat.ST_MTIME

    Time of last modification.

stat.ST_CTIME

    The “ctime” as reported by the operating system. On some systems (like Unix) is the time of the last metadata change, and, on others (like Windows), is the creation time (see platform documentation for details).

The interpretation of “file size” changes according to the file type. For plain files this is the size of the file in bytes. For FIFOs and sockets under most flavors of Unix (including Linux in particular), the “size” is the number of bytes waiting to be read at the time of the call to os.stat(), os.fstat(), or os.lstat(); this can sometimes be useful, especially for polling one of these special files after a non-blocking open. The meaning of the size field for other character and block devices varies more, depending on the implementation of the underlying system call.

The variables below define the flags used in the ST_MODE field.

Use of the functions above is more portable than use of the first set of flags:

    Directory.

stat.S_IFCHR

    Character device.

stat.S_IFIFO

    FIFO.

stat.S_IFDOOR

    Door.

    New in version 3.4.

stat.S_IFPORT

    Event port.

    New in version 3.4.

stat.S_IFWHT

    Whiteout.

    New in version 3.4.

Note

S_IFDOOR, S_IFPORT or S_IFWHT are defined as 0 when the platform does not have support for the file types.

The following flags can also be used in the mode argument of os.chmod():

stat.S_ISUID

    Set UID bit.

stat.S_ISGID

    Set-group-ID bit. This bit has several special uses. For a directory it indicates that BSD semantics is to be used for that directory: files created there inherit their group ID from the directory, not from the effective group ID of the creating process, and directories created there will also get the S_ISGID bit set. For a file that does not have the group execution bit (S_IXGRP) set, the set-group-ID bit indicates mandatory file/record locking (see also S_ENFMT).

stat.S_ISVTX

    Sticky bit. When this bit is set on a directory it means that a file in that directory can be renamed or deleted only by the owner of the file, by the owner of the directory, or by a privileged process.

stat.S_IRWXU

    Mask for file owner permissions.

stat.S_IRUSR

    Owner has read permission.

stat.S_IWUSR

    Owner has write permission.

stat.S_IXUSR

    Owner has execute permission.

stat.S_IRWXG

    Mask for group permissions.

stat.S_IRGRP

    Group has read permission.

stat.S_IWGRP

    Group has write permission.

stat.S_IXGRP

    Group has execute permission.

stat.S_IRWXO

    Mask for permissions for others (not in group). Mask for permissions for others (not in group).
    Mask for permissions for others (not in group).Mask for permissions for others (not in group).
    Mask for permissions for others (not in group).Mask for permissions for others (not in group).

stat.S_IROTH

    Others have read permission.

stat.S_IWOTH

    Others have write permission.

stat.S_IXOTH

    Others have execute permission.

stat.S_ENFMT

    System V file locking enforcement. This flag is shared with S_ISGID: file/record locking is enforced on files that do not have the group execution bit (S_IXGRP) set.

stat.S_IREAD

    Unix V7 synonym for S_IRUSR.

stat.S_IWRITE

    Unix V7 synonym for S_IWUSR.

stat.S_IEXEC

    Unix V7 synonym for S_IXUSR.

The following flags can be used in the flags argument of os.chflags():

stat.UF_NODUMP

    Do not dump the file.

stat.UF_IMMUTABLE

    The file may not be changed.

stat.UF_APPEND

    The file may only be appended to.

stat.UF_OPAQUE

    The directory is opaque when viewed through a union stack.

stat.UF_NOUNLINK

    The file may not be renamed or deleted.

stat.UF_COMPRESSED

    The file is stored compressed (Mac OS X 10.6+).

stat.UF_HIDDEN

    The file should not be displayed in a GUI (Mac OS X 10.5+).

stat.SF_ARCHIVED

    The file may be archived.

stat.SF_IMMUTABLE

    The file may not be changed.

stat.SF_APPEND

    The file may only be appended to.

stat.SF_NOUNLINK

    The file may not be renamed or deleted.

stat.SF_SNAPSHOT

    The file is a snapshot file.

See the *BSD or Mac OS systems man page chflags(2) for more information.

On Windows, the following file attribute constants are available for use when testing bits in the st_file_attributes member returned by os.stat(). See the Windows API documentation for more detail on the meaning of these constants.

stat.FILE_ATTRIBUTE_ARCHIVE
stat.FILE_ATTRIBUTE_COMPRESSED

    New in version 3.5.

On Windows, the following constants are available for comparing against the st_reparse_tag member returned by os.lstat(). These are well-known constants, but are not an exhaustive list.

stat.IO_REPARSE_TAG_SYMLINK
stat.IO_REPARSE_TAG_MOUNT_POINT
stat.IO_REPARSE_TAG_APPEXECLINK

    New in version 3.8.

Previous topic

fileinput — Iterate over lines from multiple input streams
Next topic

filecmp — File and Directory Comparisons
This Page

    Report a Bug
    Show Source

«

    index
    modules |
    next |
    previous |
    Python » 3.9.5 Documentation » The Python Standard Library » File and Directory Access »